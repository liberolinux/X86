#!/bin/bash

# Copyright © 1999-2025 Gerard Beekmans
# Linux® is a registered trademark of Linus Torvalds.
#
# This file contains the MIT License for the software developed by Gerard Beekmans.
# The MIT License grants permission to any person obtaining a copy of this software
# and associated documentation files to use, copy, modify, merge, publish, distribute,
# sublicense, and/or sell copies of the Software, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
# PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
# FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

# Start Counting Time of Script
start_time=$(date +%s)

# Set up environment variables for the build process
export LIBERO=/mnt/libero
export LC_ALL=POSIX
export PATH=$LIBERO/tools/bin:$PATH
export CONFIG_SITE=$LIBERO/usr/share/config.site
export LIBERO_TGT=$(uname -m)-libero-linux-gnu

DEVICE=/dev/sdX

acl_version="2.3.2"
attr_version="2.5.2"
autoconf_version="2.72"
automake_version="1.18.1"
bash_version="5.3"
bc_version="7.0.3"
binutils_version="2.45"
bison_version="3.8.2"
bzip2_version="1.0.8"
check_version="0.15.2"
coreutils_version="9.7"
dbus_version="1.16.2"
dejagnu_version="1.6.3"
diffutils_version="3.12"
e2fsprogs_version="1.47.3"
elfutils_version="0.193"
expat_version="2.7.1"
expect_version="5.45.4"
file_version="5.46"
findutils_version="4.10.0"
flex_version="2.6.4"
flit_core_version="3.12.0"
gawk_version="5.3.2"
gcc_version="15.2.0"
gdbm_version="1.26"
gettext_version="0.26"
glibc_version="2.42"
gmp_version="6.3.0"
gperf_version="3.3"
grep_version="3.12"
groff_version="1.23.0"
grub_version="2.12"
gzip_version="1.14"
iana_etc_version="20250807"
inetutils_version="2.6"
intltool_version="0.51.0"
iproute2_version="6.16.0"
jinja2_version="3.1.6"
kbd_version="2.8.0"
kmod_version="34.2"
less_version="679"
libcap_version="2.76"
libffi_version="3.5.2"
libpipeline_version="1.5.8"
libtool_version="2.5.4"
libxcrypt_version="4.4.38"
linux_version="6.12.50"
lz4_version="1.10.0"
m4_version="1.4.20"
make_version="4.4.1"
man_db_version="2.13.1"
man_pages_version="6.15"
markup_safe_version="2.1.5"
meson_version="1.8.3"
mpc_version="1.3.1"
mpfr_version="4.2.2"
ncurses_version="6.5-20250809"
ninja_version="1.13.1"
openssl_version="3.5.2"
packaging_version="25.0"
patch_version="2.8"
perl_version="5.42.0"
pkgconf_version="2.5.1"
procps_ng_version="4.0.5"
psmisc_version="23.7"
python_version="3.13.7"
readline_version="8.3"
sed_version="4.9"
setuptools_version="80.9.0"
shadow_version="4.18.0"
systemd_version="257.8"
tar_version="1.35"
tcl_version="8.6.16"
texinfo_version="7.2"
tzdata_version="2025b"
util_linux_version="2.41.1"
vim_version="9.1.1629"
wheel_version="0.46.1"
xml_parser_version="2.47"
xz_version="5.8.1"
zlib_version="1.3.1"
zstd_version="1.5.7"

if grep -qs '$LIBERO' /proc/mounts; then
    sudo umount -fv $LIBERO
fi

# Create GPT label
sudo parted "$DEVICE" mklabel gpt

# Create 64MiB BIOS (GRUB) partition: 1MiB..65MiB
sudo parted "$DEVICE" mkpart primary 1MiB 65MiB
sudo parted "$DEVICE" set 1 bios_grub on

# Create 8GiB swap partition: 65MiB .. 8257MiB (65 + 8192 = 8257)
sudo parted "$DEVICE" mkpart primary linux-swap 65MiB 8257MiB

# Create ext4 partition using the rest of the disk
sudo parted "$DEVICE" mkpart primary ext4 8257MiB 100%

# Let kernel re-read the partition table
sudo partprobe "$DEVICE" || sleep 1

# Format the swap partition
sudo mkswap -L SWAP ${DEVICE}2
sudo swapon ${DEVICE}2

# Format the ext4 partition
sudo mkfs.ext4 -L LIBERO ${DEVICE}3
sudo e2fsck -f ${DEVICE}3

# Show resulting partition table
sudo parted "$DEVICE" print

echo ""
read -t 10 -p "Press Enter to continue..." || true

# Create a new directory for LIBERO system if it doesn't exist
if [ ! -d "$LIBERO" ]; then
    sudo mkdir -pv $LIBERO
fi

# Check if the partitions are already mounted
if grep -qs '$LIBERO' /proc/mounts; then
    echo "LIBERO partition is already mounted"
else
    # Mount the new partition to the LIBERO directory
    sudo mount -v -t ext4 ${DEVICE}3 /mnt/libero
fi

if [ ! -d "$LIBERO/tools" ]; then
    sudo mkdir -v $LIBERO/tools
fi
if [ ! -L "/tools" ]; then
    sudo ln -sv $LIBERO/tools /
fi

if [ ! -d "$LIBERO/sources" ]; then
    sudo mkdir -pv $LIBERO/sources
fi

# If 02Preparation.log does not exists then create it
if [ ! -f "$LIBERO/sources/02Preparation.log" ]; then
    sudo touch $LIBERO/sources/02Preparation.log
    sudo chmod 777 $LIBERO/sources/02Preparation.log
fi

# If error occurs, write error to a file
exec 2> $LIBERO/sources/02Preparation.log

# Download all source packages and patches
# Replace <url> with the appropriate URL for the package
urls=(
        https://download.savannah.gnu.org/releases/acl/acl-$acl_version.tar.xz \
        https://download.savannah.gnu.org/releases/attr/attr-$attr_version.tar.gz \
        https://ftp.gnu.org/gnu/autoconf/autoconf-$autoconf_version.tar.xz \
        https://ftp.gnu.org/gnu/automake/automake-$automake_version.tar.xz \
        https://ftp.gnu.org/gnu/bash/bash-$bash_version.tar.gz \
        https://github.com/gavinhoward/bc/releases/download/$bc_version/bc-$bc_version.tar.xz \
        https://sourceware.org/pub/binutils/releases/binutils-$binutils_version.tar.xz \
        https://ftp.gnu.org/gnu/bison/bison-$bison_version.tar.xz \
        https://www.sourceware.org/pub/bzip2/bzip2-$bzip2_version.tar.gz \
        https://github.com/libcheck/check/releases/download/$check_version/check-$check_version.tar.gz \
        https://ftp.gnu.org/gnu/coreutils/coreutils-$coreutils_version.tar.xz \
        https://dbus.freedesktop.org/releases/dbus/dbus-$dbus_version.tar.xz \
        https://ftp.gnu.org/gnu/dejagnu/dejagnu-$dejagnu_version.tar.gz \
        https://ftp.gnu.org/gnu/diffutils/diffutils-$diffutils_version.tar.xz \
        https://downloads.sourceforge.net/project/e2fsprogs/e2fsprogs/v$e2fsprogs_version/e2fsprogs-$e2fsprogs_version.tar.gz \
        https://sourceware.org/ftp/elfutils/$elfutils_version/elfutils-$elfutils_version.tar.bz2 \
        https://github.com/libexpat/libexpat/releases/download/R_2_7_1/expat-$expat_version.tar.xz \
        https://prdownloads.sourceforge.net/expect/expect$expect_version.tar.gz \
        https://astron.com/pub/file/file-$file_version.tar.gz \
        https://ftp.gnu.org/gnu/findutils/findutils-$findutils_version.tar.xz \
        https://github.com/westes/flex/releases/download/v$flex_version/flex-$flex_version.tar.gz \
        https://pypi.org/packages/source/f/flit-core/flit_core-$flit_core_version.tar.gz \
        https://ftp.gnu.org/gnu/gawk/gawk-$gawk_version.tar.xz \
        https://ftp.gnu.org/gnu/gcc/gcc-$gcc_version/gcc-$gcc_version.tar.xz \
        https://ftp.gnu.org/gnu/gdbm/gdbm-$gdbm_version.tar.gz \
        https://ftp.gnu.org/gnu/gettext/gettext-$gettext_version.tar.xz \
        https://ftp.gnu.org/gnu/glibc/glibc-$glibc_version.tar.xz \
        https://ftp.gnu.org/gnu/gmp/gmp-$gmp_version.tar.xz \
        https://ftp.gnu.org/gnu/gperf/gperf-$gperf_version.tar.gz \
        https://ftp.gnu.org/gnu/grep/grep-$grep_version.tar.xz \
        https://ftp.gnu.org/gnu/groff/groff-$groff_version.tar.gz \
        https://ftp.gnu.org/gnu/grub/grub-$grub_version.tar.xz \
        https://ftp.gnu.org/gnu/gzip/gzip-$gzip_version.tar.xz \
        https://github.com/Mic92/iana-etc/releases/download/$iana_etc_version/iana-etc-$iana_etc_version.tar.gz \
        https://ftp.gnu.org/gnu/inetutils/inetutils-$inetutils_version.tar.xz \
        https://launchpad.net/intltool/trunk/$intltool_version/+download/intltool-$intltool_version.tar.gz \
        https://www.kernel.org/pub/linux/utils/net/iproute2/iproute2-$iproute2_version.tar.xz \
        https://pypi.org/packages/source/J/Jinja2/jinja2-$jinja2_version.tar.gz \
        https://www.kernel.org/pub/linux/utils/kbd/kbd-$kbd_version.tar.xz \
        https://www.kernel.org/pub/linux/utils/kernel/kmod/kmod-$kmod_version.tar.xz \
        https://www.greenwoodsoftware.com/less/less-$less_version.tar.gz \
        https://www.kernel.org/pub/linux/libs/security/linux-privs/libcap2/libcap-$libcap_version.tar.xz \
        https://github.com/libffi/libffi/releases/download/v$libffi_version/libffi-$libffi_version.tar.gz \
        https://download.savannah.gnu.org/releases/libpipeline/libpipeline-$libpipeline_version.tar.gz \
        https://ftp.gnu.org/gnu/libtool/libtool-$libtool_version.tar.xz \
        https://github.com/besser82/libxcrypt/releases/download/v$libxcrypt_version/libxcrypt-$libxcrypt_version.tar.xz \
        https://www.kernel.org/pub/linux/kernel/v6.x/linux-$linux_version.tar.xz \
        https://github.com/lz4/lz4/releases/download/v$lz4_version/lz4-$lz4_version.tar.gz
        https://ftp.gnu.org/gnu/m4/m4-$m4_version.tar.xz \
        https://ftp.gnu.org/gnu/make/make-$make_version.tar.gz \
        https://download.savannah.gnu.org/releases/man-db/man-db-$man_db_version.tar.xz \
        https://www.kernel.org/pub/linux/docs/man-pages/man-pages-$man_pages_version.tar.xz \
        https://pypi.org/packages/source/M/MarkupSafe/MarkupSafe-$markup_safe_version.tar.gz \
        https://github.com/mesonbuild/meson/releases/download/$meson_version/meson-$meson_version.tar.gz \
        https://ftp.gnu.org/gnu/mpc/mpc-$mpc_version.tar.gz \
        https://ftp.gnu.org/gnu/mpfr/mpfr-$mpfr_version.tar.xz \
        https://invisible-mirror.net/archives/ncurses/current/ncurses-$ncurses_version.tgz \
        https://github.com/ninja-build/ninja/archive/v$ninja_version/ninja-$ninja_version.tar.gz \
        https://www.openssl.org/source/openssl-$openssl_version.tar.gz \
        https://files.pythonhosted.org/packages/source/p/packaging/packaging-$packaging_version.tar.gz \
        https://ftp.gnu.org/gnu/patch/patch-$patch_version.tar.xz \
        https://www.cpan.org/src/5.0/perl-$perl_version.tar.xz \
        https://distfiles.ariadne.space/pkgconf/pkgconf-$pkgconf_version.tar.xz \
        https://sourceforge.net/projects/procps-ng/files/Production/procps-ng-$procps_ng_version.tar.xz \
        https://sourceforge.net/projects/psmisc/files/psmisc/psmisc-$psmisc_version.tar.xz \
        https://www.python.org/ftp/python/$python_version/Python-$python_version.tar.xz \
        https://ftp.gnu.org/gnu/readline/readline-$readline_version.tar.gz \
        https://ftp.gnu.org/gnu/sed/sed-$sed_version.tar.xz \
        https://pypi.org/packages/source/s/setuptools/setuptools-$setuptools_version.tar.gz \
        https://github.com/shadow-maint/shadow/releases/download/$shadow_version/shadow-$shadow_version.tar.xz \
        https://github.com/systemd/systemd/archive/v$systemd_version/systemd-$systemd_version.tar.gz \
        https://ftp.gnu.org/gnu/tar/tar-$tar_version.tar.xz \
        https://downloads.sourceforge.net/tcl/tcl$tcl_version-src.tar.gz \
        https://ftp.gnu.org/gnu/texinfo/texinfo-$texinfo_version.tar.xz \
        https://www.iana.org/time-zones/repository/releases/tzdata$tzdata_version.tar.gz \
        https://www.kernel.org/pub/linux/utils/util-linux/v2.41/util-linux-$util_linux_version.tar.xz \
        https://github.com/vim/vim/archive/v$vim_version/vim-$vim_version.tar.gz \
        https://pypi.org/packages/source/w/wheel/wheel-$wheel_version.tar.gz \
        https://cpan.metacpan.org/authors/id/T/TO/TODDR/XML-Parser-$xml_parser_version.tar.gz \
        https://tukaani.org/xz/xz-$xz_version.tar.xz \
        https://zlib.net/fossils/zlib-$zlib_version.tar.gz \
        https://cdn.netbsd.org/pub/pkgsrc/pkgsrc-2025Q3/pkgsrc-2025Q3.tar.gz \
        https://github.com/facebook/zstd/releases/download/v$zstd_version/zstd-$zstd_version.tar.gz \
        https://www.linuxfromscratch.org/patches/lfs/12.4/bzip2-1.0.8-install_docs-1.patch \
        https://www.linuxfromscratch.org/patches/lfs/12.4/coreutils-9.7-i18n-1.patch \
        https://www.linuxfromscratch.org/patches/lfs/12.4/coreutils-9.7-upstream_fix-1.patch \
        https://www.linuxfromscratch.org/patches/lfs/12.4/expect-5.45.4-gcc15-1.patch \
        https://www.linuxfromscratch.org/patches/lfs/12.4/glibc-2.42-fhs-1.patch \
        https://www.linuxfromscratch.org/patches/lfs/12.4/kbd-2.8.0-backspace-1.patch \
        https://www.linuxfromscratch.org/lfs/downloads/12.4-systemd/md5sums
)

total_packages=0
total_patches=0

total=${#urls[@]}
progress=0

for url in "${urls[@]}"; do
    # Download the file
    if sudo wget -P $LIBERO/sources $url; then
        # Check if downloaded file is a tar.*
        if [[ "$url" == *.tar.* ]]; then
            total_packages=$((total_packages + 1))
        fi

        # Check if downloaded file is a *.patch
        if [[ "$url" == *.patch ]]; then
            total_patches=$((total_patches + 1))
        fi

        # Update the progress bar
        progress=$((progress + 1))
        percent=$((progress * 100 / total))
        package_num=$(printf "[%d/%d]" "$progress" "$total")
        printf "%s [%3d%%] Downloaded %s\n\n" "$package_num" "$percent" "$(basename "$url")"
    else
        #If not created not_downloaded.txt file, create it
        if [ ! -f "$LIBERO/sources/not_downloaded.txt" ]; then
            sudo touch $LIBERO/sources/not_downloaded.txt
            sudo chmod 777 $LIBERO/sources/not_downloaded.txt
        fi

        echo "ERROR: Could not Fetch Package"
        # Save package not downloaded
        echo "$url" >> $LIBERO/sources/not_downloaded.txt
        echo ""
    fi
done

echo ""
read -t 10 -p "Press Enter to continue..." || true

echo ""

# Ask the user if they want to download the linux-firmware package
echo "Do you want to download the linux-firmware package?"
echo -n "(y/n): "
read choice
if [[ $choice == "y" || $choice == "Y" || $choice == "Yes" || $choice == "YES" ]]; then
    echo ""
    # Download the linux-firmware package
    sudo git clone  https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git \
        $LIBERO/sources/linux-firmware

    total_packages=$((total_packages + 1))

    echo ""
    read -t 10 -p "Press Enter to continue..." || true
else
    echo ""
    echo "Skipping the download of linux-firmware package."
fi

echo ""

echo "Total Packages Downloaded= $total_packages \($((total_packages - total_patches))\)"
echo "Total Patches Downloaded= $total_patches"

echo ""
read -t 10 -p "Press Enter to continue..." || true

echo ""

# Create Folders on $LIBERO
echo "Create Folders on $LIBERO"
if [ ! -d "$LIBERO/etc" ]; then
    sudo mkdir -pv $LIBERO/etc
fi

if [ ! -d "$LIBERO/var" ]; then
    sudo mkdir -pv $LIBERO/var
fi

if [ ! -d "$LIBERO/usr/bin" ]; then
    sudo mkdir -pv $LIBERO/usr/bin
fi

if [ ! -d "$LIBERO/usr/lib" ]; then
    sudo mkdir -pv $LIBERO/usr/lib
fi

if [ ! -d "$LIBERO/usr/sbin" ]; then
    sudo mkdir -pv $LIBERO/usr/sbin
fi

echo "[Done]"

echo ""

# Create Symlinks from / to /usr
echo "Create Symlinks from / to /usr"
for i in bin sbin lib; do
    if [ ! -L "$LIBERO/$i" ]; then
        sudo ln -sv usr/$i $LIBERO/$i
    fi
done

echo "[Done]"

echo ""

# Change Owner to User "libero"
echo "Change Directories Owner to User libero"
sudo chown -v libero $LIBERO/{usr{,/*},lib,var,etc,bin,sbin,sources,tools}

echo ""

# Copy Scripts to the desired locations
sudo cp -R 06ChrootEnv $LIBERO/sources/
sudo cp -R 07AdditionalCrossCompilingTools $LIBERO/sources/
sudo cp -R 08BasicSystemSoftware $LIBERO/sources/
sudo cp -R 09SystemConfiguration $LIBERO/sources/
sudo cp -R 10MakingLiberoBootable $LIBERO/sources/

echo "[Done]"

echo ""

# End Counnting Time of Script
end_time=$(date +%s)
time_elapsed=$((end_time - start_time))
hours=$((time_elapsed / 3600))
minutes=$((time_elapsed % 3600 / 60))
seconds=$((time_elapsed % 60))
echo "Time: $hours hour(s), $minutes minute(s), and $seconds second(s)"

echo ""
echo "Preparation is complete. You can now proceed with the next steps."
echo ""
