name: Build Libero ISO
on:
  workflow_dispatch: null
  push:
    branches:
    - main
  pull_request: null
permissions:
  contents: read
env:
  DEBIAN_IMAGE: i386/debian:bookworm
  LIBERO_IMAGE_SIZE: 30G
  ISO_ARTIFACT_PATH: artifacts/libero-server-edition.iso
  SOURCE_CACHE_KEY_PREFIX: libero-sources
  COMMON_APT_PACKAGES: build-essential binutils bison gawk texinfo xz-utils m4 python3
    python3-distutils python3-setuptools perl tar patch diffutils findutils gzip sed
    grep coreutils git curl wget rsync parted xorriso sudo ca-certificates udev
jobs:
  Script_01Requirements:
    name: 01Requirements
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Prepare workspace
      run: 'set -euo pipefail

        mkdir -p cache/sources artifacts .ci

        chmod +x ci/run_stage.sh

        '
    - name: Restore source cache
      uses: actions/cache@v4
      with:
        path: cache/sources
        key: ${{ env.SOURCE_CACHE_KEY_PREFIX }}-${{ hashFiles('02Preparation') }}
        restore-keys: '${{ env.SOURCE_CACHE_KEY_PREFIX }}-

          '
    - name: Run stage 01
      run: 'docker run --rm \

        -v "${PWD}:/workspace" \

        -w /workspace \

        -e COMMON_APT_PACKAGES="${COMMON_APT_PACKAGES}" \

        "${DEBIAN_IMAGE}" \

        /workspace/ci/run_stage.sh 01

        '
    - name: Cleanup
      if: always()
      run: rm -rf .ci
  Script_02Preparation:
    name: 02Preparation
    runs-on: ubuntu-latest
    timeout-minutes: 360
    needs: Script_01Requirements
    steps:
    - uses: actions/checkout@v4
    - name: Prepare workspace
      run: 'set -euo pipefail

        mkdir -p cache/sources artifacts .ci

        chmod +x ci/run_stage.sh

        '
    - name: Restore source cache
      uses: actions/cache@v4
      with:
        path: cache/sources
        key: ${{ env.SOURCE_CACHE_KEY_PREFIX }}-${{ hashFiles('02Preparation') }}
        restore-keys: '${{ env.SOURCE_CACHE_KEY_PREFIX }}-

          '
    - name: Run stage 02
      run: 'docker run --rm --privileged \

        -v "${PWD}:/workspace" \

        -v "${PWD}/cache/sources:/workspace/cache/sources" \

        -w /workspace \

        -e COMMON_APT_PACKAGES="${COMMON_APT_PACKAGES}" \

        -e HOST_UID="$(id -u)" \

        -e HOST_GID="$(id -g)" \

        -e LIBERO_IMAGE_SIZE="${LIBERO_IMAGE_SIZE}" \

        -e ISO_ARTIFACT_PATH="${ISO_ARTIFACT_PATH}" \

        "${DEBIAN_IMAGE}" \

        /workspace/ci/run_stage.sh 02

        '
    - name: Package rootfs
      run: |
        set -euo pipefail
        if [ -d rootfs ]; then
          tar -czf .ci/libero-rootfs-02.tar.gz -C rootfs .
        else
          echo "Rootfs not found" >&2
          exit 1
        fi
    - name: Upload rootfs artifact
      uses: actions/upload-artifact@v4
      with:
        name: libero-rootfs-02
        path: .ci/libero-rootfs-02.tar.gz
        if-no-files-found: error
    - name: Cleanup
      if: always()
      run: rm -rf .ci
  Script_03CrossCompiler:
    name: 03CrossCompiler
    runs-on: ubuntu-latest
    timeout-minutes: 360
    needs: Script_02Preparation
    steps:
    - uses: actions/checkout@v4
    - name: Prepare workspace
      run: 'set -euo pipefail

        mkdir -p cache/sources artifacts .ci

        chmod +x ci/run_stage.sh

        '
    - name: Restore source cache
      uses: actions/cache@v4
      with:
        path: cache/sources
        key: ${{ env.SOURCE_CACHE_KEY_PREFIX }}-${{ hashFiles('02Preparation') }}
        restore-keys: '${{ env.SOURCE_CACHE_KEY_PREFIX }}-

          '
    - name: Download rootfs from stage 02
      uses: actions/download-artifact@v4
      with:
        name: libero-rootfs-02
        path: .ci
    - name: Extract rootfs
      run: |
        set -euo pipefail
        mkdir -p rootfs
        tar -xzf .ci/libero-rootfs-02.tar.gz -C rootfs
    
    - name: Run stage 03
      run: 'docker run --rm --privileged \

        -v "${PWD}:/workspace" \

        -v "${PWD}/cache/sources:/workspace/cache/sources" \

        -w /workspace \

        -e COMMON_APT_PACKAGES="${COMMON_APT_PACKAGES}" \

        -e HOST_UID="$(id -u)" \

        -e HOST_GID="$(id -g)" \

        -e LIBERO_IMAGE_SIZE="${LIBERO_IMAGE_SIZE}" \

        -e ISO_ARTIFACT_PATH="${ISO_ARTIFACT_PATH}" \

        "${DEBIAN_IMAGE}" \

        /workspace/ci/run_stage.sh 03

        '
    - name: Package rootfs
      run: |
        set -euo pipefail
        if [ -d rootfs ]; then
          tar -czf .ci/libero-rootfs-03.tar.gz -C rootfs .
        else
          echo "Rootfs not found" >&2
          exit 1
        fi
    - name: Upload rootfs artifact
      uses: actions/upload-artifact@v4
      with:
        name: libero-rootfs-03
        path: .ci/libero-rootfs-03.tar.gz
        if-no-files-found: error
    - name: Cleanup
      if: always()
      run: rm -rf .ci
  Script_04CrossCompilingTools:
    name: 04CrossCompilingTools
    runs-on: ubuntu-latest
    timeout-minutes: 360
    needs: Script_03CrossCompiler
    steps:
    - uses: actions/checkout@v4
    - name: Prepare workspace
      run: 'set -euo pipefail

        mkdir -p cache/sources artifacts .ci

        chmod +x ci/run_stage.sh

        '
    - name: Restore source cache
      uses: actions/cache@v4
      with:
        path: cache/sources
        key: ${{ env.SOURCE_CACHE_KEY_PREFIX }}-${{ hashFiles('02Preparation') }}
        restore-keys: '${{ env.SOURCE_CACHE_KEY_PREFIX }}-

          '
    - name: Download rootfs from stage 03
      uses: actions/download-artifact@v4
      with:
        name: libero-rootfs-03
        path: .ci
    - name: Extract rootfs
      run: |
        set -euo pipefail
        mkdir -p rootfs
        tar -xzf .ci/libero-rootfs-03.tar.gz -C rootfs
    
    - name: Run stage 04
      run: 'docker run --rm --privileged \

        -v "${PWD}:/workspace" \

        -v "${PWD}/cache/sources:/workspace/cache/sources" \

        -w /workspace \

        -e COMMON_APT_PACKAGES="${COMMON_APT_PACKAGES}" \

        -e HOST_UID="$(id -u)" \

        -e HOST_GID="$(id -g)" \

        -e LIBERO_IMAGE_SIZE="${LIBERO_IMAGE_SIZE}" \

        -e ISO_ARTIFACT_PATH="${ISO_ARTIFACT_PATH}" \

        "${DEBIAN_IMAGE}" \

        /workspace/ci/run_stage.sh 04

        '
    - name: Package rootfs
      run: |
        set -euo pipefail
        if [ -d rootfs ]; then
          tar -czf .ci/libero-rootfs-04.tar.gz -C rootfs .
        else
          echo "Rootfs not found" >&2
          exit 1
        fi
    - name: Upload rootfs artifact
      uses: actions/upload-artifact@v4
      with:
        name: libero-rootfs-04
        path: .ci/libero-rootfs-04.tar.gz
        if-no-files-found: error
    - name: Cleanup
      if: always()
      run: rm -rf .ci
  Script_05PrepChrootEnv:
    name: 05PrepChrootEnv
    runs-on: ubuntu-latest
    timeout-minutes: 360
    needs: Script_04CrossCompilingTools
    steps:
    - uses: actions/checkout@v4
    - name: Prepare workspace
      run: 'set -euo pipefail

        mkdir -p cache/sources artifacts .ci

        chmod +x ci/run_stage.sh

        '
    - name: Restore source cache
      uses: actions/cache@v4
      with:
        path: cache/sources
        key: ${{ env.SOURCE_CACHE_KEY_PREFIX }}-${{ hashFiles('02Preparation') }}
        restore-keys: '${{ env.SOURCE_CACHE_KEY_PREFIX }}-

          '
    - name: Download rootfs from stage 04
      uses: actions/download-artifact@v4
      with:
        name: libero-rootfs-04
        path: .ci
    - name: Extract rootfs
      run: |
        set -euo pipefail
        mkdir -p rootfs
        tar -xzf .ci/libero-rootfs-04.tar.gz -C rootfs
    
    - name: Run stage 05
      run: 'docker run --rm --privileged \

        -v "${PWD}:/workspace" \

        -v "${PWD}/cache/sources:/workspace/cache/sources" \

        -w /workspace \

        -e COMMON_APT_PACKAGES="${COMMON_APT_PACKAGES}" \

        -e HOST_UID="$(id -u)" \

        -e HOST_GID="$(id -g)" \

        -e LIBERO_IMAGE_SIZE="${LIBERO_IMAGE_SIZE}" \

        -e ISO_ARTIFACT_PATH="${ISO_ARTIFACT_PATH}" \

        "${DEBIAN_IMAGE}" \

        /workspace/ci/run_stage.sh 05

        /workspace/ci/run_stage.sh 05

        '
    - name: Package rootfs
      run: |
        set -euo pipefail
        if [ -d rootfs ]; then
          tar -czf .ci/libero-rootfs-05.tar.gz -C rootfs .
        else
          echo "Rootfs not found" >&2
          exit 1
        fi
    - name: Upload rootfs artifact
      uses: actions/upload-artifact@v4
      with:
        name: libero-rootfs-05
        path: .ci/libero-rootfs-05.tar.gz
        if-no-files-found: error
      run: rm -rf .ci
  Script_06ChrootEnv:
    name: 06ChrootEnv
    runs-on: ubuntu-latest
    timeout-minutes: 360
    needs: Script_05PrepChrootEnv
    steps:
    - uses: actions/checkout@v4
    - name: Prepare workspace
      run: 'set -euo pipefail

        mkdir -p cache/sources artifacts .ci

        chmod +x ci/run_stage.sh

        '
    - name: Restore source cache
      uses: actions/cache@v4
      with:
    - name: Download rootfs from stage 05
      uses: actions/download-artifact@v4
      with:
        name: libero-rootfs-05
        path: .ci
    - name: Extract rootfs
      run: |
        set -euo pipefail
        mkdir -p rootfs
        tar -xzf .ci/libero-rootfs-05.tar.gz -C rootfs
    
        mv .ci/libero-disk-05.img.xz .ci/libero.img.xz

        xz -d .ci/libero.img.xz

        '
    - name: Run stage 06
      run: 'docker run --rm --privileged \

        -v "${PWD}:/workspace" \

        -v "${PWD}/cache/sources:/workspace/cache/sources" \

        -w /workspace \

        -e COMMON_APT_PACKAGES="${COMMON_APT_PACKAGES}" \

        -e HOST_UID="$(id -u)" \

        -e HOST_GID="$(id -g)" \

        -e LIBERO_IMAGE_SIZE="${LIBERO_IMAGE_SIZE}" \

        -e ISO_ARTIFACT_PATH="${ISO_ARTIFACT_PATH}" \

        "${DEBIAN_IMAGE}" \

        /workspace/ci/run_stage.sh 06

        '
    - name: Package rootfs
      run: |
        set -euo pipefail
        if [ -d rootfs ]; then
          tar -czf .ci/libero-rootfs-06.tar.gz -C rootfs .
        else
          echo "Rootfs not found" >&2
          exit 1
        fi
    - name: Upload rootfs artifact
      uses: actions/upload-artifact@v4
      with:
        name: libero-rootfs-06
        path: .ci/libero-rootfs-06.tar.gz
        if-no-files-found: error
    - name: Cleanup
      if: always()
      run: rm -rf .ci
  Script_07AdditionalCrossCompilingTools:
    name: 07AdditionalCrossCompilingTools
    runs-on: ubuntu-latest
    timeout-minutes: 360
    needs: Script_06ChrootEnv
    steps:
    - uses: actions/checkout@v4
    - name: Prepare workspace
      run: 'set -euo pipefail

        mkdir -p cache/sources artifacts .ci

        chmod +x ci/run_stage.sh

        '
    - name: Restore source cache
      uses: actions/cache@v4
      with:
        path: cache/sources
        key: ${{ env.SOURCE_CACHE_KEY_PREFIX }}-${{ hashFiles('02Preparation') }}
        restore-keys: '${{ env.SOURCE_CACHE_KEY_PREFIX }}-

          '
    - name: Download rootfs from stage 06
      uses: actions/download-artifact@v4
      with:
        name: libero-rootfs-06
        path: .ci
    - name: Extract rootfs
      run: |
        set -euo pipefail
        mkdir -p rootfs
        tar -xzf .ci/libero-rootfs-06.tar.gz -C rootfs
    
    - name: Run stage 07
      run: 'docker run --rm --privileged \

        -v "${PWD}:/workspace" \

        -v "${PWD}/cache/sources:/workspace/cache/sources" \

        -w /workspace \

        -e COMMON_APT_PACKAGES="${COMMON_APT_PACKAGES}" \

        -e HOST_UID="$(id -u)" \

        -e HOST_GID="$(id -g)" \

        -e LIBERO_IMAGE_SIZE="${LIBERO_IMAGE_SIZE}" \

        -e ISO_ARTIFACT_PATH="${ISO_ARTIFACT_PATH}" \

        "${DEBIAN_IMAGE}" \

        /workspace/ci/run_stage.sh 07

        '
    - name: Package rootfs
      run: |
        set -euo pipefail
        if [ -d rootfs ]; then
          tar -czf .ci/libero-rootfs-07.tar.gz -C rootfs .
        else
          echo "Rootfs not found" >&2
          exit 1
        fi
    - name: Upload rootfs artifact
      uses: actions/upload-artifact@v4
      with:
        name: libero-rootfs-07
        path: .ci/libero-rootfs-07.tar.gz
        if-no-files-found: error
    - name: Cleanup
      if: always()
      run: rm -rf .ci
  Script_08BasicSystemSoftware:
    name: 08BasicSystemSoftware
    runs-on: ubuntu-latest
    timeout-minutes: 360
    needs: Script_07AdditionalCrossCompilingTools
    steps:
    - uses: actions/checkout@v4
    - name: Prepare workspace
      run: 'set -euo pipefail

        mkdir -p cache/sources artifacts .ci

        chmod +x ci/run_stage.sh

        '
    - name: Restore source cache
      uses: actions/cache@v4
      with:
        path: cache/sources
        key: ${{ env.SOURCE_CACHE_KEY_PREFIX }}-${{ hashFiles('02Preparation') }}
        restore-keys: '${{ env.SOURCE_CACHE_KEY_PREFIX }}-

          '
    - name: Download rootfs from stage 07
      uses: actions/download-artifact@v4
      with:
        name: libero-rootfs-07
        path: .ci
    - name: Extract rootfs
      run: |
        set -euo pipefail
        mkdir -p rootfs
        tar -xzf .ci/libero-rootfs-07.tar.gz -C rootfs
    
    - name: Run stage 08
      run: 'docker run --rm --privileged \

        -v "${PWD}:/workspace" \

        -v "${PWD}/cache/sources:/workspace/cache/sources" \

        -w /workspace \

        -e COMMON_APT_PACKAGES="${COMMON_APT_PACKAGES}" \

        -e HOST_UID="$(id -u)" \

        -e HOST_GID="$(id -g)" \

        -e LIBERO_IMAGE_SIZE="${LIBERO_IMAGE_SIZE}" \

        -e ISO_ARTIFACT_PATH="${ISO_ARTIFACT_PATH}" \

        "${DEBIAN_IMAGE}" \

        /workspace/ci/run_stage.sh 08

        '
    - name: Package rootfs
      run: |
        set -euo pipefail
        if [ -d rootfs ]; then
          tar -czf .ci/libero-rootfs-08.tar.gz -C rootfs .
        else
          echo "Rootfs not found" >&2
          exit 1
        fi
    - name: Upload rootfs artifact
      uses: actions/upload-artifact@v4
      with:
        name: libero-rootfs-08
        path: .ci/libero-rootfs-08.tar.gz
        if-no-files-found: error
    - name: Cleanup
      if: always()
      run: rm -rf .ci
  Script_09SystemConfiguration:
    name: 09SystemConfiguration
    runs-on: ubuntu-latest
    timeout-minutes: 360
    needs: Script_08BasicSystemSoftware
    steps:
    - uses: actions/checkout@v4
    - name: Prepare workspace
      run: 'set -euo pipefail

        mkdir -p cache/sources artifacts .ci

        chmod +x ci/run_stage.sh

        '
    - name: Restore source cache
      uses: actions/cache@v4
      with:
        path: cache/sources
        key: ${{ env.SOURCE_CACHE_KEY_PREFIX }}-${{ hashFiles('02Preparation') }}
        restore-keys: '${{ env.SOURCE_CACHE_KEY_PREFIX }}-

          '
    - name: Download rootfs from stage 08
      uses: actions/download-artifact@v4
      with:
        name: libero-rootfs-08
        path: .ci
    - name: Extract rootfs
      run: |
        set -euo pipefail
        mkdir -p rootfs
        tar -xzf .ci/libero-rootfs-08.tar.gz -C rootfs
    - name: Run stage 09
      run: 'docker run --rm --privileged \

        -v "${PWD}:/workspace" \

        -v "${PWD}/cache/sources:/workspace/cache/sources" \

        -w /workspace \

        -e COMMON_APT_PACKAGES="${COMMON_APT_PACKAGES}" \

        -e HOST_UID="$(id -u)" \

        -e HOST_GID="$(id -g)" \

        -e LIBERO_IMAGE_SIZE="${LIBERO_IMAGE_SIZE}" \

        -e ISO_ARTIFACT_PATH="${ISO_ARTIFACT_PATH}" \

        "${DEBIAN_IMAGE}" \

        /workspace/ci/run_stage.sh 09

        '
    - name: Package rootfs
      run: |
        set -euo pipefail
        if [ -d rootfs ]; then
          tar -czf .ci/libero-rootfs-09.tar.gz -C rootfs .
        else
          echo "Rootfs not found" >&2
          exit 1
        fi
    - name: Upload rootfs artifact
      uses: actions/upload-artifact@v4
      with:
        name: libero-rootfs-09
        path: .ci/libero-rootfs-09.tar.gz
        if-no-files-found: error
    - name: Cleanup
      if: always()
      run: rm -rf .ci
  Script_10MakingLiberoBootable:
    name: 10MakingLiberoBootable
    runs-on: ubuntu-latest
    timeout-minutes: 360
    needs: Script_09SystemConfiguration
    steps:
    - uses: actions/checkout@v4
    - name: Prepare workspace
      run: 'set -euo pipefail

        mkdir -p cache/sources artifacts .ci

        chmod +x ci/run_stage.sh

        '
    - name: Restore source cache
      uses: actions/cache@v4
      with:
    - name: Download rootfs from stage 09
      uses: actions/download-artifact@v4
      with:
        name: libero-rootfs-09
        path: .ci
    - name: Extract rootfs
      run: |
        set -euo pipefail
        mkdir -p rootfs
        tar -xzf .ci/libero-rootfs-09.tar.gz -C rootfs
    
        mv .ci/libero-disk-09.img.xz .ci/libero.img.xz

        xz -d .ci/libero.img.xz

        '
    - name: Run stage 10
      run: 'docker run --rm --privileged \

        -v "${PWD}:/workspace" \

        -v "${PWD}/cache/sources:/workspace/cache/sources" \

        -w /workspace \

        -e COMMON_APT_PACKAGES="${COMMON_APT_PACKAGES}" \

        -e HOST_UID="$(id -u)" \

        -e HOST_GID="$(id -g)" \

        -e LIBERO_IMAGE_SIZE="${LIBERO_IMAGE_SIZE}" \

        -e ISO_ARTIFACT_PATH="${ISO_ARTIFACT_PATH}" \

        "${DEBIAN_IMAGE}" \

        /workspace/ci/run_stage.sh 10

        /workspace/ci/run_stage.sh 10

        '
    - name: Package rootfs
      run: |
        set -euo pipefail
        if [ -d rootfs ]; then
          tar -czf .ci/libero-rootfs-10.tar.gz -C rootfs .
        else
          echo "Rootfs not found" >&2
          exit 1
        fi
    - name: Upload rootfs artifact
      uses: actions/upload-artifact@v4
      with:
        name: libero-rootfs-10
        path: .ci/libero-rootfs-10.tar.gz
        if-no-files-found: error
      run: rm -rf .ci
  Script_11MakeBootableISO:
    name: 11MakeBootableISO
    runs-on: ubuntu-latest
    timeout-minutes: 360
    needs: Script_10MakingLiberoBootable
    steps:
    - uses: actions/checkout@v4
    - name: Prepare workspace
      run: 'set -euo pipefail

        mkdir -p cache/sources artifacts .ci

        chmod +x ci/run_stage.sh

        '
    - name: Restore source cache
      uses: actions/cache@v4
      with:
    - name: Download rootfs from stage 10
      uses: actions/download-artifact@v4
      with:
        name: libero-rootfs-10
        path: .ci
    - name: Extract rootfs
      run: |
        set -euo pipefail
        mkdir -p rootfs
        tar -xzf .ci/libero-rootfs-10.tar.gz -C rootfs
    
        mv .ci/libero-disk-10.img.xz .ci/libero.img.xz

        xz -d .ci/libero.img.xz

        '
    - name: Run stage 11
      run: 'docker run --rm --privileged \

        -v "${PWD}:/workspace" \

        -v "${PWD}/cache/sources:/workspace/cache/sources" \

        -w /workspace \

        -e COMMON_APT_PACKAGES="${COMMON_APT_PACKAGES}" \

        -e HOST_UID="$(id -u)" \

        -e HOST_GID="$(id -g)" \

        -e LIBERO_IMAGE_SIZE="${LIBERO_IMAGE_SIZE}" \

        -e ISO_ARTIFACT_PATH="${ISO_ARTIFACT_PATH}" \

        "${DEBIAN_IMAGE}" \

        /workspace/ci/run_stage.sh 11

        '
    - name: Upload ISO artifact
      uses: actions/upload-artifact@v4
      with:
        name: libero-iso
        path: artifacts/libero-server-edition.iso
        if-no-files-found: error
    - name: Cleanup
      if: always()
      run: rm -rf .ci
