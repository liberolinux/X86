#!/bin/bash

# Copyright © 1999-2025 Gerard Beekmans
# Linux® is a registered trademark of Linus Torvalds.
#
# This file contains the MIT License for the software developed by Gerard Beekmans.
# The MIT License grants permission to any person obtaining a copy of this software
# and associated documentation files to use, copy, modify, merge, publish, distribute,
# sublicense, and/or sell copies of the Software, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
# PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
# FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

# Start Counting Time of Script
start_time=$(date +%s)

DEVICE=/dev/sdX

linux_version="6.12.50"

# Set the environment variables
export LC_ALL=POSIX

# Set the cross-compile flags
# export CFLAGS="-Oz -pipe -march=x86-64 -fomit-frame-pointer -fstack-clash-protection \
        #-fno-plt -fexceptions -fasynchronous-unwind-tables -Wp,-D_FORTIFY_SOURCE=2"
# export CXXFLAGS="-Oz -pipe -march=x86-64 -fomit-frame-pointer -fstack-clash-protection \
        #-fno-plt -fexceptions -fasynchronous-unwind-tables -Wp,-D_FORTIFY_SOURCE=2"
# export LDFLAGS="-Wl,-O1,--sort-common,--as-needed,-z,now"

# Final Chapter - Making Libero Bootable
echo "" 
echo "Final Chapter - Making Libero Bootable"

echo ""
read -t 10 -p "Press Enter to continue..." || true

# Creating the /etc/fstab File
# You can modify this for your needs
echo "Creating the /etc/fstab File"

SWAP_PARTITION=$(blkid -s UUID -o value ${DEVICE}2)
ROOT_PARTITION=$(blkid -s UUID -o value ${DEVICE}3)

cat > /etc/fstab << "EOF"
# Begin /etc/fstab

# file system  mount-point  type     options             dump  fsck
#                                                              order

UUID=<swap>     none         swap    sw                                 0       0
UUID=<root>     /            ext4    rw,noatime,relatime,discard            0       1

# End /etc/fstab
EOF
echo ""
echo "[Done]"

echo ""
echo "Write the Value of UUID Partitions Using 'sed' command"

sed -i "s/<swap>/${SWAP_PARTITION}/g" /etc/fstab
sed -i "s/<root>/${ROOT_PARTITION}/g" /etc/fstab

echo ""
echo "[Done]"

# Installation of the Linux Kernel Package
echo ""
echo "Installation of the Linux Kernel"

# Pause for 5 seconds
sleep 5

cd /sources
tar -xvf /sources/linux-$linux_version.tar.xz
tar -xvf /sources/linux-$linux_version.tar.xz -C /usr/src
cd /sources/linux-$linux_version

# Copy current directory of Linux Kernel Firmware to the desired Directory
cp -Rv ../linux-firmware/* /lib/firmware/

make mrproper

make allmodconfig

make

make modules_install

# The path to the kernel image may vary depending on the platform being used.
# The filename below can be changed to suit your taste, but the stem of the filename
# should be vmlinuz to be compatible with the automatic setup of the boot process
# described in the next section. The following command assumes an x86 architecture
cp -iv arch/x86/boot/bzImage /boot/vmlinuz

# System.map is a symbol file for the kernel.
# It maps the function entry points of every function in the kernel API,
# as well as the addresses of the kernel data structures for the running kernel.
# It is used as a resource when investigating kernel problems.
# Issue the following command to install the map file
cp -iv System.map /boot/System.map

# The kernel configuration file .config contains all the configuration selections for
# the kernel that was just compiled. It is a good idea to keep this file for future reference
cp -iv .config /boot/config

# Install the documentation for the Linux kernel
cp -r Documentation -T /usr/share/doc/linux

rm -rf /sources/linux-$linux_version

echo ""
echo "[Done]"
read -t 10 -p "Press Enter to continue..." || true

# GRUB Configuration File

mkdir /boot/grub

echo "GRUB Configuration File"
cat > /boot/grub/grub.cfg << EOF
# Begin /boot/grub/grub.cfg
set default=0
set timeout=30

# Solarized Light Theme for GRUB
set color_normal=dark-gray/light-gray
set color_highlight=white/cyan
set menu_color_normal=dark-gray/light-gray
set menu_color_highlight=white/cyan
set gfxpayload=keep

insmod all_video
insmod part_gpt
insmod part_msdos
insmod ext2
search --no-floppy --fs-uuid --set=root=UUID="<root>"

menuentry "Libero GNU/Linux"  {
  echo    'Loading Linux ...'
  linux   /vmlinuz root=UUID="<root>" rw
}
EOF
echo "[Done]"

echo ""
echo "Change Values from Grub Configuration using 'sed'"

sed -i "s/<root>/${ROOT_PARTITION}/g" /boot/grub/grub.cfg

echo ""
echo "[Done]"

# Boot Configuration with GRUB
echo ""
echo "Boot Configuration with GRUB"
grub-install --target=i386-pc $DEVICE
echo "[Done]"

echo ""
echo "[Done]"
read -t 10 -p "Press Enter to continue..." || true

echo ""
echo "Status of the system with respect to the Linux Standards Base (LSB)"

cat > /etc/lsb-release << "EOF"
DISTRIB_ID="Libero GNU/Linux"
DISTRIB_RELEASE="1.2"
DISTRIB_DESCRIPTION="Fast and Secure GNU/Linux Distribution"
EOF

cat > /etc/os-release << "EOF"
NAME="Libero GNU/Linux"
VERSION="1.2"
ID=libero
PRETTY_NAME="Libero GNU/Linux"
HOME_URL="https://libero.eu.org"
EOF

echo ""
echo "[Done]"
read -t 10 -p "Press Enter to continue..." || true

# End Counnting Time of Script
end_time=$(date +%s)
time_elapsed=$((end_time - start_time))
hours=$((time_elapsed / 3600))
minutes=$((time_elapsed % 3600 / 60))
seconds=$((time_elapsed % 60))
echo "Time: $hours hour(s), $minutes minute(s), and $seconds second(s)"
